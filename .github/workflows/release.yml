name: releaser

on:
  create:
      tags:
  # push:
  #   branches:
  #     - 'release'
  #   tags:
  #     - 'v*'

jobs:
  build:
    name: Build release on ${{ matrix.os }} with ${{ matrix.compiler }}.
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            compiler: gcc
            target: Linux

          - os: macos-latest
            compiler: clang
            target: Macos

          - os: windows-latest
            compiler: cl
            target: Windows
    # if: github.event_name == 'create' && github.event.ref_type == 'tag' && startsWith(github.event.ref, 'v')
    # https://stackoverflow.com/questions/59349905/which-properties-does-github-event-in-a-github-workflow-have
    # https://github.community/t/how-to-get-just-the-tag-name/16241/15
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(git describe --tags --abbrev=0)
          GOHOSTOS=$(go env GOHOSTOS) envsubst < ".goreleaser.yml" > .releaser.yml
        # env:
        #   GITHUB_CONTEXT: ${{ toJson(github) }}

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          # version: ${{ steps.get_version.outputs.version }}
          version: latest
          args: release --rm-dist -f .releaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pwd: ${{ github.workspace }}
